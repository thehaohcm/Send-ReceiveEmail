/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emailreceive;

import java.awt.event.KeyEvent;
import java.net.URL;
import java.net.URLConnection;
import java.util.Properties;
import javax.mail.*;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author thehaohcm
 */
public final class IntializeForm extends javax.swing.JFrame {
    
    private Thread thread;
    
    public IntializeForm(String username,String password,String smtpserver,String smtpport,String imapserver,String imapport,boolean ssl){
        ImageIcon img=new ImageIcon("email.png");
        this.setIconImage(img.getImage()); 
        
        initComponents();
        
        this.username.setText(username);
        this.password1.setText(password);
        //this.jComboBox1.setSelectedItem(CoMail);
        this.smtpserver.setText(smtpserver);
        this.smtpport.setText(smtpport);
        this.imapserver.setText(imapserver);
        this.imapport.setText(imapport);
        if(ssl==true)
            this.sslcheck.setState(true);
        else
            this.sslcheck.setState(false);   
        
        if(smtpserver.contains(".yahoo."))
            jComboBox1.setSelectedIndex(1);
        else if(smtpserver.contains(".gmail."))
            jComboBox1.setSelectedIndex(2);
        else if(smtpserver.contains(".outlook."))
            jComboBox1.setSelectedIndex(3);
        else if(smtpserver.contains(".aol."))
            jComboBox1.setSelectedIndex(4);
        else
            jComboBox1.setSelectedIndex(0);
        
        this.jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
        this.jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
        this.jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
        this.jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
       
    }
    
    public IntializeForm() {
        ImageIcon img=new ImageIcon("email.png");
        this.setIconImage(img.getImage()); 

        initComponents();
        
        this.jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        this.jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        this.jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        this.jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        
    }
    
    private boolean CheckConnect()
    {
        try {
            URL url = new URL("http://www.yahoo.com");
            URLConnection conn = url.openConnection();
            conn.connect();
            return true;
        } catch (Exception e) {
            return false;
        }
    }
    
    private boolean CheckConnectSMTP()
    {
        
        try {
            Properties props = new Properties();
            // required for gmail 
            String ssl;
            if(sslcheck.getState()==true)
                ssl="true";
            else
                ssl="false";
            props.put("mail.smtp.starttls.enable",ssl);
            props.put("mail.smtp.auth", ssl);
            // or use getDefaultInstance instance if desired...
            Session session = Session.getInstance(props, null);
            Transport transport = session.getTransport("smtp");
            transport.connect(smtpserver.getText(), Integer.parseInt(smtpport.getText()), username.getText(), password1.getText());
            transport.close();
            return true;
         } 
         catch(Exception ex) {
               return false;
         }
    }
    
    private boolean CheckConnectIMAP()
    {
        try {
            Properties props = new Properties();
            props.put("mail.store.protocol", "imaps");
            Session session = Session.getInstance(props, null);
            Store store = session.getStore("imaps");
            store.connect(imapserver.getText(),Integer.parseInt(imapport.getText()), username.getText(), password1.getText());
            return true;
        } catch (Exception ex)
        {
            return false;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        password1 = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        smtpserver = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        smtpport = new javax.swing.JTextField();
        imapserver = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        imapport = new javax.swing.JTextField();
        sslcheck = new java.awt.Checkbox();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Khởi tạo thông tin sử dụng");
        setMinimumSize(new java.awt.Dimension(390, 420));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("<html>Mời bạn nhập vào thông tin tài khoản email để sử dụng chương trình</html>");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đăng nhập:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 12))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Tài khoản email:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 23, -1, -1));

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameKeyTyped(evt);
            }
        });
        jPanel1.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 230, -1));

        jLabel3.setText("Mật khẩu:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 67, -1, -1));

        jLabel5.setText("Nhà cung cấp:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 95, 90, -1));

        jComboBox1.setMaximumRowCount(6);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tùy chọn...", "Yahoo! Mail", "Gmail", "Hot Mail - Outlook", "AOL Mail" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 230, -1));

        jLabel6.setText("(user@domain)");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 39, -1, -1));

        password1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                password1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                password1KeyTyped(evt);
            }
        });
        jPanel1.add(password1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 230, -1));
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 20, 20));
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 20, 20));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nâng Cao:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 12))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("Máy chủ SMTP:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 30, -1, -1));

        smtpserver.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                smtpserverKeyTyped(evt);
            }
        });
        jPanel2.add(smtpserver, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 27, 135, -1));

        jLabel8.setText("Máy chủ IMAP:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 61, -1, -1));

        jLabel9.setText("Cổng:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 30, -1, -1));

        smtpport.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                smtpportKeyTyped(evt);
            }
        });
        jPanel2.add(smtpport, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 27, 53, -1));

        imapserver.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                imapserverKeyTyped(evt);
            }
        });
        jPanel2.add(imapserver, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 58, 134, -1));

        jLabel10.setText("Cổng:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 61, -1, -1));

        imapport.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                imapportKeyTyped(evt);
            }
        });
        jPanel2.add(imapport, new org.netbeans.lib.awtextra.AbsoluteConstraints(294, 58, 53, -1));

        sslcheck.setFont(sslcheck.getFont());
        sslcheck.setLabel("Secure Sockets Layer (SSL)");
        jPanel2.add(sslcheck, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 20, 20));
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 60, 20, 20));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/plug-connect-icon.png"))); // NOI18N
        jButton1.setText("Kết nối");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/Actions-dialog-cancel-icon.png"))); // NOI18N
        jButton2.setText("Thoát");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jProgressBar1.setFont(new java.awt.Font("NSimSun", 0, 11)); // NOI18N
        jProgressBar1.setBorderPainted(false);
        jProgressBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jProgressBar1.setIndeterminate(true);

        jLabel4.setText("Đang tải dữ liệu. Bạn vui lòng đợi...");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(10, 10, 10)
                        .addComponent(jButton2)))
                .addGap(0, 7, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(396, 420));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        switch(jComboBox1.getSelectedItem().toString())
        {
            case "Yahoo! Mail":
                smtpserver.setText("smtp.mail.yahoo.com");
                smtpport.setText("587");
                imapserver.setText("imap.mail.yahoo.com");
                imapport.setText("993");
                sslcheck.setState(true);
                if(username.getText().contains("yahoo.com")||username.getText().contains("ymail.com"))
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
                else
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
                break;
            case "Gmail":
                smtpserver.setText("smtp.gmail.com");
                smtpport.setText("587");
                imapserver.setText("imap.gmail.com");
                imapport.setText("993");
                sslcheck.setState(true);
                if(username.getText().contains("gmail.com"))
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
                else
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
                break;
//            case "iCloud":
//                smtpserver.setText("smtp.mail.me.com");
//                smtpport.setText("587");
//                imapserver.setText("imap.mail.me.com");
//                imapport.setText("993");
//                sslcheck.setState(true);
//                break;
            case "Hot Mail - Outlook":
                smtpserver.setText("smtp-mail.outlook.com");
                smtpport.setText("587");
                imapserver.setText("imap-mail.outlook.com");
                imapport.setText("993");
                if(username.getText().contains("hotmail.com")||username.getText().contains("outlook.com"))
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
                else
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
                sslcheck.setState(true);
                break;
            case "AOL Mail":
                smtpserver.setText("smtp.aol.com");
                smtpport.setText("587");
                imapserver.setText("imap.aol.com");
                imapport.setText("993");
                sslcheck.setState(true);
                if(username.getText().contains("aol.com")||username.getText().contains("aol.com"))
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
                else
                    jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
                break;
            case "Tùy chọn...":
                smtpserver.setText("");
                smtpport.setText("");
                imapserver.setText("");
                imapport.setText("");
                sslcheck.setState(false);
                jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
                break;
        }
        
        if(jComboBox1.getSelectedItem().toString()=="Tùy chọn...")
        {
            jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        }
        else
        {
            jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        jProgressBar1.setVisible(false);
        jLabel4.setVisible(false);
    }//GEN-LAST:event_formWindowActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: 
        
        thread = new Thread(new Runnable(){
            public void run()
            {
                jButton2.setText("Hủy bỏ");
                jButton1.setEnabled(false);
                username.setEnabled(false);
                password1.setEnabled(false);
                jComboBox1.setEnabled(false);
                smtpserver.setEnabled(false);
                smtpport.setEnabled(false);
                imapserver.setEnabled(false);
                imapport.setEnabled(false);
                sslcheck.setEnabled(false);
                jProgressBar1.setVisible(true);
                jLabel4.setVisible(true);
                
                if((((("".equals(username.getText()) || "".equals(password1.getText())) || "".equals(smtpserver.getText())) || "".equals(smtpport.getText())) || "".equals(imapserver.getText()))||"".equals(imapport.getText()))
                    JOptionPane.showMessageDialog(null,"Bạn vui lòng nhập đầy đủ thông tin trước khi tiếp tục","Thiếu thông tin đăng nhập",JOptionPane.INFORMATION_MESSAGE);
                else { 
                    if(CheckConnectSMTP()!=true||CheckConnectIMAP()!=true)
                        if(CheckConnectIMAP()==false&&CheckConnectSMTP()==false)
                            if(CheckConnect()==true)
                                JOptionPane.showMessageDialog(null, "Bạn vui lòng kiểm tra lại thông tin đăng nhập","Sai thông tin đăng nhập",JOptionPane.ERROR_MESSAGE);
                            else
                                JOptionPane.showMessageDialog(null,"Bạn vui lòng kiểm tra lại kết nối Internet","Lỗi kết nối server",JOptionPane.ERROR_MESSAGE);
                        else
                            if(CheckConnectIMAP()==false)
                                JOptionPane.showMessageDialog(null,"Lỗi kết nối server IMAP, bạn vui lòng kiểm tra lại thông tin","Không thể kết nối server IMAP",JOptionPane.ERROR_MESSAGE);
                            else
                                JOptionPane.showMessageDialog(null,"Lỗi kết nối server STMP, bạn vui lòng kiểm tra lại thông tin","Không thể kết nối server SMTP",JOptionPane.ERROR_MESSAGE);
                    else 
                        ShowDialog();
                }
                
                jButton1.setEnabled(true);
                username.setEnabled(true);
                password1.setEnabled(true);
                jComboBox1.setEnabled(true);
                smtpserver.setEnabled(true);
                smtpport.setEnabled(true);
                imapserver.setEnabled(true);
                imapport.setEnabled(true);
                sslcheck.setEnabled(true);
                jProgressBar1.setVisible(false);
                jLabel4.setVisible(false);
                
            }
        });
        thread.start();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ShowDialog()
    {
        EmailReceiveForm form1 =new EmailReceiveForm(username.getText(),password1.getText(),smtpserver.getText(),smtpport.getText(),imapserver.getText(),imapport.getText(),sslcheck.getState());//,jComboBox1.getSelectedItem().toString());
        
        form1.setTitle(username.getText()+" | Send & Receive eMail Application");
        //form1.Initial(username.getText(),password1.getText(),smtpserver.getText(),smtpport.getText(),imapserver.getText(),imapport.getText(),sslcheck.toString(),jComboBox1.getSelectedItem().toString());
        form1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        form1.pack();
        form1.setVisible(true);
        this.dispose();
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jButton2.getText()=="Thoát")
            System.exit(0);
        else
        {
            thread.stop();
            jButton1.setEnabled(true);
            username.setEnabled(true);
            password1.setEnabled(true);
            jComboBox1.setEnabled(true);
            smtpserver.setEnabled(true);
            smtpport.setEnabled(true);
            imapserver.setEnabled(true);
            imapport.setEnabled(true);
            sslcheck.setEnabled(true);
            jProgressBar1.setVisible(false);
            jLabel4.setVisible(false);
            jButton2.setText("Thoát");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void usernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyTyped
        // TODO add your handling code here:
        if(username.getText().contains("@yahoo.")||username.getText().contains("@ymail."))
            jComboBox1.setSelectedIndex(1);
        else if(username.getText().contains("@gmail."))
            jComboBox1.setSelectedIndex(2);
        else if(username.getText().contains("@hotmail.")||username.getText().contains("@outlook."))
            jComboBox1.setSelectedIndex(3);
        else if(username.getText().contains("@aol."))
            jComboBox1.setSelectedIndex(4);
        else
            jComboBox1.setSelectedIndex(0);
            
        
        if(!username.getText().contains("@") || !username.getText().contains("."))
            jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        else
            jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
    }//GEN-LAST:event_usernameKeyTyped

    private void password1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_password1KeyTyped
        // TODO add your handling code here:
        if(password1.getText().length() <= 3)
            jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        else
            jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
    }//GEN-LAST:event_password1KeyTyped

    private void smtpserverKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smtpserverKeyTyped
        // TODO add your handling code here:
        if(smtpserver.getText().equals("")||smtpport.getText().equals(""))
            jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        else
            jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
        
        
    }//GEN-LAST:event_smtpserverKeyTyped

    private void imapserverKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imapserverKeyTyped
        // TODO add your handling code here:
        if(imapport.getText().equals("")||imapport.getText().equals(""))
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        else
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
    }//GEN-LAST:event_imapserverKeyTyped

    private void password1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_password1KeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()==KeyEvent.VK_ENTER)
            jButton1.doClick();
    }//GEN-LAST:event_password1KeyPressed

    private void usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()==KeyEvent.VK_ENTER)
            jButton1.doClick();
    }//GEN-LAST:event_usernameKeyPressed

    private void smtpportKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smtpportKeyTyped
        // TODO add your handling code here:
        if(smtpserver.getText().equals("")||smtpport.getText().equals(""))
            jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        else
            jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
    }//GEN-LAST:event_smtpportKeyTyped

    private void imapportKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_imapportKeyTyped
        // TODO add your handling code here:
        if(imapport.getText().equals("")||imapport.getText().equals(""))
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/error.png")));
        else
            jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/emailreceive/res/check.png")));
    }//GEN-LAST:event_imapportKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IntializeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IntializeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IntializeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IntializeForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IntializeForm().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField imapport;
    private javax.swing.JTextField imapserver;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JPasswordField password1;
    private javax.swing.JTextField smtpport;
    private javax.swing.JTextField smtpserver;
    private java.awt.Checkbox sslcheck;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

}
